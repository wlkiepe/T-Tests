# -*- coding: utf-8 -*-
"""Copy of Day79_t_tests

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1auRCKW47Mz-I2oipsr6aC-7nzjyyZDC-
"""

import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px
import numpy as np
import matplotlib.dates as mdates
import matplotlib.dates as mdates
import seaborn as sns
import scipy

df_monthly = pd.read_csv("monthly_deaths.csv")
print(df_monthly.shape)
print(df_monthly.head())

df_yearly = pd.read_csv("annual_deaths_by_clinic.csv")
print(df_yearly.shape)
print(df_yearly.head())

df_monthly.describe()

df_yearly['mortality_rate'] = df_yearly['deaths'] / df_yearly['births']

df_yearly

# Create locators for ticks on the time axis (mdates is a part of matplotlib)

years = mdates.YearLocator()
months = mdates.MonthLocator()
years_fmt = mdates.DateFormatter('%Y') 


#Select the size and title
plt.figure(figsize=(14,8), dpi=200)
plt.title('Total Number of Monthly Births and Deaths', fontsize=18)
plt.yticks(fontsize=14)
plt.xticks(fontsize=14, rotation=45)

ax1 = plt.gca()
ax2 = ax1.twinx()

ax1.set_ylabel('Births', color='skyblue', fontsize=18)
ax2.set_ylabel('Deaths', color='crimson', fontsize=18)

# Use Locators
ax1.set_xlim([df_monthly.date.min(), df_monthly.date.max()])
ax1.xaxis.set_major_locator(years)
ax1.xaxis.set_major_formatter(years_fmt)
ax1.xaxis.set_minor_locator(months)

#Add the grids
ax1.grid(color='grey', linestyle='--')

ax1.set_ylabel('Births', color='skyblue', fontsize=18)
ax2.set_ylabel('Deaths', color='crimson', fontsize=18)

ax1.plot(df_monthly.date,
         df_monthly.births,
         linewidth=3)

ax2.plot(df_monthly.date,
         df_monthly.deaths,
         linestyle='dashed',
         color='red',
         linewidth=2)

plt.show()

# Create locators for ticks on the time axis
years = mdates.YearLocator()
months = mdates.MonthLocator()
years_fmt = mdates.DateFormatter('%Y')  

plt.figure(figsize=(14,8), dpi=200)
plt.title('Total Number of Monthly Births and Deaths', fontsize=18)
plt.yticks(fontsize=14)
plt.xticks(fontsize=14, rotation=45)
 
ax1 = plt.gca()
ax2 = ax1.twinx()
 
ax1.set_ylabel('Births', color='skyblue', fontsize=18)
ax2.set_ylabel('Deaths', color='crimson', fontsize=18)
 
# Use Locators

ax1.xaxis.set_major_locator(years)
ax1.xaxis.set_major_formatter(years_fmt)
ax1.xaxis.set_minor_locator(months)
 
ax1.grid(color='grey', linestyle='--')
 
ax1.plot(df_monthly.date, 
         df_monthly.births, 
         color='skyblue', 
         linewidth=3)
 
ax2.plot(df_monthly.date, 
         df_monthly.deaths, 
         color='crimson', 
         linewidth=2, 
         linestyle='--')
 
plt.show()

df_clinic1 = df_yearly[df_yearly['clinic'] == 'clinic 1']
df_clinic1

df_clinic2 = df_yearly[df_yearly['clinic'] == 'clinic 2']
df_clinic2

px.line(df_yearly,
         x='year',
         y='births',
         color='clinic',
        title='Total Yearly Births by Clinic')

px.line(df_yearly,
         x='year',
         y='deaths',
         color='clinic',
        title='Total Yearly Deaths by Clinic')

px.line(df_yearly,
         x='year',
         y='mortality_rate',
         color='clinic',
        title='Yearly Mortality Rate By Clinic')

df_monthly.head()

df_monthly['pct_deaths'] = df_monthly['deaths'] / df_monthly['births']
df_monthly.head()

df_monthly.tail()

df_monthly['date'] = pd.to_datetime(df_monthly['date'])
handwashing_start = pd.to_datetime("1847-06-01")

df_monthly.info()

before_washing = df_monthly[df_monthly.date < handwashing_start]
after_washing = df_monthly[df_monthly.date >= handwashing_start]

after_washing.head()

before_washing.describe()

after_washing.describe()

bw_rate = before_washing.deaths.sum() / before_washing.births.sum() * 100
aw_rate = after_washing.deaths.sum() / after_washing.births.sum() * 100
print(f'Average death rate before 1847 was {bw_rate: .5}%')
print(f'Average death rate AFTER 1847 was {aw_rate:.3}%')



before_washing.head()

roll_df = before_washing.set_index('date')
roll_df = roll_df.rolling(window=6).mean()
roll_df.tail()

plt.figure(figsize=(14,8), dpi=200)
plt.title('Percentage of Monthly Deaths over Time', fontsize=18)
plt.yticks(fontsize=14)
plt.xticks(fontsize=14, rotation=45)
 
plt.ylabel('Percentage of Deaths', color='crimson', fontsize=18)
 
ax = plt.gca()
ax.xaxis.set_major_locator(years)
ax.xaxis.set_major_formatter(years_fmt)
ax.xaxis.set_minor_locator(months)
ax.set_xlim([df_monthly.date.min(), df_monthly.date.max()])
 
plt.grid(color='grey', linestyle='--')
 
ma_line, = plt.plot(roll_df.index, 
                    roll_df.pct_deaths, 
                    color='crimson', 
                    linewidth=3, 
                    linestyle='--',
                    label='6m Moving Average')
bw_line, = plt.plot(before_washing.date, 
                    before_washing.pct_deaths,
                    color='black', 
                    linewidth=1, 
                    linestyle='--', 
                    label='Before Handwashing')
aw_line, = plt.plot(after_washing.date, 
                    after_washing.pct_deaths, 
                    color='skyblue', 
                    linewidth=3, 
                    marker='o',
                    label='After Handwashing')
 
plt.legend(handles=[ma_line, bw_line, aw_line],
           fontsize=18)
 
plt.show()

before_washing.describe()

after_washing.describe()

avg_prob_before = before_washing.pct_deaths.mean()

avg_prob_after = after_washing.pct_deaths.mean()

avg_prob_before / avg_prob_after

df_monthly['washing_hands'] = np.where(df_monthly.date < handwashing_start, 'No', 'Yes')

box = px.box(df_monthly, x='washing_hands', y='pct_deaths', color='washing_hands')
box.update_layout(xaxis_title='Did the Doctors Wash Their Hands?',
                  yaxis_title='Percentage of Monthly Deaths',)
 
box.show()

df_monthly.head()

hist = px.histogram(df_monthly, 
                   x='pct_deaths', 
                   color='washing_hands',
                   nbins=30,
                   opacity=0.6,
                   barmode='overlay',
                   histnorm='percent',
                   marginal='box',)
 
hist.update_layout(xaxis_title='Proportion of Monthly Deaths',
                   yaxis_title='Count',)
 
hist.show()

before_washing.head()

plt.figure(dpi=200)
sns.kdeplot(before_washing.pct_deaths, shade=True, clip=(0,1))
sns.kdeplot(after_washing.pct_deaths, shade=True, clip=(0,1))
plt.title('Est. Distribution of Monthly Death Rate Before and After Handwashing')
plt.show()

ttest = scipy.stats.ttest_ind(before_washing['pct_deaths'], after_washing['pct_deaths'])
ttest

t_stat, p_value = scipy.stats.ttest_ind(a=before_washing.pct_deaths, 
                                  b=after_washing.pct_deaths)
print(f't-stat = {t_stat: .10f}')
print(f'p-value = {p_value: .4}')

